#!/usr/bin/env bash

# Update these variables before running this script
AWS_ACCOUNT_ID=
ACCESS_KEY_ID=
SECRET_ACCESS_KEY=

read -r -d '' usage << EOF
Usage: $(basename $0) [-h] [-r <region>] <command>

Starts a bash shell with AWS environment variables set

Options:
    -r <Region>  Region (default: us-east-1)
    -h           Displays this help
EOF

region='us-east-1'
while getopts ':r:h' OPT; do
    case "$OPT" in
        r)  region="$OPTARG" ;;
        h)  echo "$usage" ; exit 0 ;;
        ?)  echo "Invalid option: -$OPTARG" ; exit 2 ;;
        *)  echo "Internal error" ; exit 2 ;;
    esac
done
shift $((OPTIND - 1))


[[ -z "$AWS_ACCOUNT_ID" ]]    && { echo "Missing AWS_ACCOUNT_ID";    exit 1; }
[[ -z "$ACCESS_KEY_ID" ]]     && { echo "Missing ACCESS_KEY_ID";     exit 1; }
[[ -z "$SECRET_ACCESS_KEY" ]] && { echo "Missing SECRET_ACCESS_KEY"; exit 1; }


# Set up the interactive bash shell this script will start
read -r -d '' init_cmds << EOF
function dspcreds() {
    echo "export AWS_ACCOUNT_ID=\$AWS_ACCOUNT_ID"
    echo "export AWS_DEFAULT_REGION=\$AWS_DEFAULT_REGION"
    echo "export AWS_ACCESS_KEY_ID=\$AWS_ACCESS_KEY_ID"
    echo "export AWS_SECRET_ACCESS_KEY=\$AWS_SECRET_ACCESS_KEY"
}

function set-region() {
    local region="\$@"
    export AWS_DEFAULT_REGION="\$@"
    export PS1="
\\d \\t <\$?>
aws-\$region > "
}

shopt -s checkwinsize

export PYTHONWARNINGS=ignore
export AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID
export AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY
set-region $region
EOF

# Start the bash shell
bash --init-file <(echo "$init_cmds")
