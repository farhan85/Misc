#!/usr/bin/env python

import boto3
from botocore.exceptions import ClientError


def create_table(ddb, params):
    try:
        response = ddb.create_table(**params)
    except ClientError as e:
        if e.response['Error']['Code'] != 'ResourceInUseException':
            raise
    waiter = ddb.get_waiter('table_exists')
    waiter.wait(TableName=params['TableName'])


def table_spec(table_name, pk_name, pk_type, sk_name=None, sk_type=None):
    spec = {
        'TableName': table_name,
        'KeySchema': [
            { 'AttributeName': pk_name, 'KeyType': 'HASH' },
        ],
        'AttributeDefinitions': [
            { 'AttributeName': pk_name, 'AttributeType': pk_type },
        ],
        'ProvisionedThroughput': {
            'ReadCapacityUnits': 20,
            'WriteCapacityUnits': 20,
        }
    }
    if sk_name and sk_type:
        spec['KeySchema'].append({ 'AttributeName': sk_name, 'KeyType': 'RANGE' })
        spec['AttributeDefinitions'].append({ 'AttributeName': sk_name, 'AttributeType': sk_type })
    return spec


if __name__ == '__main__':
    ddb = boto3.client('dynamodb', endpoint_url='http://localhost:8000')
    create_table(ddb, table_spec('new_models', 'group', 'N', 'name', 'S'))
    create_table(ddb, table_spec('completed_models', 'group', 'N', 'name', 'S'))
    create_table(ddb, table_spec('models', 'name', 'S'))
