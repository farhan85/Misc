#!/usr/bin/env python3
"""
Helper script for whenever you need to convert python dict output to valid json

Usages:
> pydict2json "{'a': 1}"
> echo "{'a': 1}" | pydict2json
> echo "{'date': datetime.datetime(2023, 1, 1, 19, 0, 0, tzinfo=tzlocal())}" | pydict2json
"""

import argparse
import json
import sys
import datetime
from dateutil.tz import tzlocal
from json import JSONEncoder


class DateTimeEncoder(JSONEncoder):
    def default(self, obj):
        if isinstance(obj, (datetime.datetime, datetime.date)):
            return obj.isoformat()


parser = argparse.ArgumentParser(description=__doc__,
                                 formatter_class=argparse.RawDescriptionHelpFormatter)
parser.add_argument('input', nargs='?')
args = parser.parse_args()

dict_str = args.input if sys.stdin.isatty() else sys.stdin.read().rstrip()

globals = {
    'datetime': datetime,
    'tzlocal': tzlocal,
    '__builtins__': {}  # Prevent arbitrary code from being executed
}
d = eval(dict_str, globals)

print(json.dumps(d, indent=2, cls=DateTimeEncoder))
